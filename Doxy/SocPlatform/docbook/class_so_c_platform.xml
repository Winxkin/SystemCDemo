<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_so_c_platform" xml:lang="en-US">
<title>SoCPlatform</title>
<indexterm><primary>SoCPlatform</primary></indexterm>
<para>
<computeroutput>#include &quot;top.h&quot;</computeroutput>
</para>
<para>Inheritance diagram for SoCPlatform:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_so_c_platform.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_so_c_platform_1a22c0796a30b0a77bacd94752fb228e28">SoCPlatform</link> (sc_core::sc_module_name name)</para>
</listitem>
            <listitem><para>void <link linkend="_class_so_c_platform_1aa9a73c577c0ff71064d56ef5b4a622fb">dump_memory</link> (const std::string &amp;name, sc_dt::uint64 offset, unsigned int len)</para>

<para>dump_memory </para>
</listitem>
            <listitem><para>unsigned int <link linkend="_class_so_c_platform_1a08a564de97649540c69db5090febf892">get_received_32bit_data</link> ()</para>

<para>get_received_data </para>
</listitem>
            <listitem><para>unsigned char * <link linkend="_class_so_c_platform_1ab48cdf23350697763e6d6e1980c29ed0">get_received_data</link> ()</para>

<para>get_received_data </para>
</listitem>
            <listitem><para>void <link linkend="_class_so_c_platform_1a05fd6e372ec6c89b2fcff4deb62dd3ac">monitor_ports</link> (bool is_enable)</para>

<para>monitor_ports </para>
</listitem>
            <listitem><para>bool <link linkend="_class_so_c_platform_1a68420e10135a04360b1af8a70baff6f6">read_input_ports</link> (const std::string &amp;name)</para>

<para>read_input_ports </para>
</listitem>
            <listitem><para>void <link linkend="_class_so_c_platform_1aa5a464ae099c60ba1d6bca9579afa1a7">Sentcustomtransaction</link> (unsigned int addr, unsigned char *data, unsigned int data_length, tlm::tlm_command cmd)</para>

<para>Sentcustomtransaction. </para>
</listitem>
            <listitem><para>void <link linkend="_class_so_c_platform_1a79130bb3520c3a038345f56d2fd6cf25">SentTransaction</link> (unsigned int addr, uint32_t data, tlm::tlm_command cmd)</para>

<para>SentTransaction. </para>
</listitem>
            <listitem><para>void <link linkend="_class_so_c_platform_1a23dd64199f535427de942617399d99dd">set_output_ports</link> (const std::string &amp;name, bool value)</para>

<para>set_output_ports </para>
</listitem>
            <listitem><para>void <link linkend="_class_so_c_platform_1a13bda8683a32fdf40b44b36300f0ba26">trigger_output_ports</link> (const std::string &amp;name, bool high_level, bool is_pos)</para>

<para>set_output_ports </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a859d2b771422c5a164012dafbc8989e1">counter_clear</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a008c346a0bdd8863ff8ec17814f0bfb5">counter_load</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a4066df293cfee090b59889e9aaa45fbe">counter_start</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a19da0392795127799e66fc4816478764">dma_ack</link> [256]</para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a963010b8cb78c33b6b4c229449fa9203">dma_int</link> [256]</para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a432d316da9659b75a9ff2ec2ad44be53">dma_req</link> [256]</para>
</listitem>
            <listitem><para>BUS&lt; APB &gt; <link linkend="_class_so_c_platform_1ad3506003ffe603a616c144d3df83b74e">m_bus</link></para>
</listitem>
            <listitem><para>DMAC&lt; 32 &gt; <link linkend="_class_so_c_platform_1a700fb9162aaf7512e9693c41c8b10894">m_dmac</link></para>
</listitem>
            <listitem><para>DummyMaster&lt; 32 &gt; <link linkend="_class_so_c_platform_1a6b64df5fa8eaa82fe31898d6422643eb">m_dummymaster</link></para>
</listitem>
            <listitem><para>DummySlave&lt; 32 &gt; <link linkend="_class_so_c_platform_1af03ba86ba2da6e4859d047613c552705">m_dummyslave</link></para>
</listitem>
            <listitem><para>RAM&lt; 32 &gt; <link linkend="_class_so_c_platform_1a43553bd73e7406d4255a25dc5ee3045d">m_ram1</link></para>
</listitem>
            <listitem><para>sc_core::sc_clock <link linkend="_class_so_c_platform_1afc086820f6d338c89893794f8a5ed911">m_sysclk</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1aa0dc3580e5ee643bc8352bc3222ae7d2">m_sysrst</link></para>
</listitem>
            <listitem><para>Target&lt; 32 &gt; <link linkend="_class_so_c_platform_1af83e96c6763b5b0c39baa0ac328f5418">m_target1</link></para>
</listitem>
            <listitem><para>Target&lt; 32 &gt; <link linkend="_class_so_c_platform_1aa4121bd495177a6f661dbc5cd06b1786">m_target2</link></para>
</listitem>
            <listitem><para>Target&lt; 32 &gt; <link linkend="_class_so_c_platform_1a189c54ea99df289ef25b4dab4883736f">m_target3</link></para>
</listitem>
            <listitem><para>Target&lt; 32 &gt; <link linkend="_class_so_c_platform_1afa4db5b546c437b7f6306c0fd4c86aef">m_target4</link></para>
</listitem>
            <listitem><para>wrapper_counter&lt; 32 &gt; <link linkend="_class_so_c_platform_1a03bf7006c051b183160d5ea2ed7f9a6c">m_wrapper_counter</link></para>
</listitem>
            <listitem><para>wrapper_four_bit_adder&lt; 32 &gt; <link linkend="_class_so_c_platform_1ad331a9e716b36bd57a50b7a919e8276a">m_wrapper_four_bit_adder</link></para>
</listitem>
            <listitem><para>wrapper_uart&lt; 32 &gt; <link linkend="_class_so_c_platform_1ac94e35b0eb83ecdd6a6bafb830ecdda4">m_wrapper_uart</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1ac8f31d7affacf83b982137f58c974746">uart_cs</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a9f79fbda67fd95709ab3d9d0ff4cfeae">uart_int2</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a2d7a5026c009275ee78fb487348b230e">uart_nrw</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a24207039d998bc340ee1c7f2c9ea5650">uart_sin</link></para>
</listitem>
            <listitem><para>sc_core::sc_signal&lt; bool &gt; <link linkend="_class_so_c_platform_1a4fdc7e80e49d8b06b3df57993f9e190d">uart_sout</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_so_c_platform_1a22c0796a30b0a77bacd94752fb228e28"/><section>
    <title>SoCPlatform()</title>
<indexterm><primary>SoCPlatform</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>SoCPlatform</secondary></indexterm>
<para><computeroutput><link linkend="_class_so_c_platform">SoCPlatform</link> (sc_core::sc_module_name name)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
References <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>, and <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663"/><section>
    <title>do_bus_binding()</title>
<indexterm><primary>do_bus_binding</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>do_bus_binding</secondary></indexterm>
<para><computeroutput>void do_bus_binding ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
References <link linkend="__i_o_8h_1a0417b0cd27b5b7da0540f7cd5c289cf8">BASE_COUNTER</link>, <link linkend="__i_o_8h_1a47cade6d740de4b59bff04f726523aa8">BASE_DMAC</link>, <link linkend="__i_o_8h_1aa2cc5909afc9a3ba5e89085875bbf9c9">BASE_DUMMYSLAVE</link>, <link linkend="__i_o_8h_1af0a829a16a6bb7ec0c609fc6d2a61496">BASE_FOUR_BIT_ADDER</link>, <link linkend="__i_o_8h_1a120adb7d5fd7d3a1779aa54ddc6effec">BASE_RAM1</link>, <link linkend="__i_o_8h_1a89c299ed457b8cf314ff4d002d862567">BASE_TARGET1</link>, <link linkend="__i_o_8h_1a1c2de1acfe32f6695ae6a858753ee102">BASE_TARGET2</link>, <link linkend="__i_o_8h_1a133305a7465d2e26d446e3d6db664813">BASE_TARGET3</link>, <link linkend="__i_o_8h_1ae72c2928d2a038c6cf7e12cdc1d282c9">BASE_TARGET4</link>, <link linkend="__i_o_8h_1a8887fc4ebda111a7806732163208a65d">BASE_UART</link>, <link linkend="_class_so_c_platform_1ad3506003ffe603a616c144d3df83b74e">m_bus</link>, <link linkend="_class_so_c_platform_1a700fb9162aaf7512e9693c41c8b10894">m_dmac</link>, <link linkend="_class_so_c_platform_1a6b64df5fa8eaa82fe31898d6422643eb">m_dummymaster</link>, <link linkend="_class_so_c_platform_1af03ba86ba2da6e4859d047613c552705">m_dummyslave</link>, <link linkend="_class_so_c_platform_1a43553bd73e7406d4255a25dc5ee3045d">m_ram1</link>, <link linkend="_class_so_c_platform_1af83e96c6763b5b0c39baa0ac328f5418">m_target1</link>, <link linkend="_class_so_c_platform_1aa4121bd495177a6f661dbc5cd06b1786">m_target2</link>, <link linkend="_class_so_c_platform_1a189c54ea99df289ef25b4dab4883736f">m_target3</link>, <link linkend="_class_so_c_platform_1afa4db5b546c437b7f6306c0fd4c86aef">m_target4</link>, <link linkend="_class_so_c_platform_1a03bf7006c051b183160d5ea2ed7f9a6c">m_wrapper_counter</link>, <link linkend="_class_so_c_platform_1ad331a9e716b36bd57a50b7a919e8276a">m_wrapper_four_bit_adder</link>, <link linkend="_class_so_c_platform_1ac94e35b0eb83ecdd6a6bafb830ecdda4">m_wrapper_uart</link>, <link linkend="__i_o_8h_1a9e1e528570b29c00fe69bc6a7bcd2eba">SIZE_COUNTER</link>, <link linkend="__i_o_8h_1a6ce550984ca431af5f198f35fdc10dcd">SIZE_DMAC</link>, <link linkend="__i_o_8h_1a4a9cac6581a3e203e31f86d7b007ee11">SIZE_DUMMYSLAVE</link>, <link linkend="__i_o_8h_1a4e43308686860d59bd91d86f50a4acde">SIZE_FOUR_BIT_ADDER</link>, <link linkend="__i_o_8h_1a0f6c0f49345abdf6825359282833af75">SIZE_RAM1</link>, <link linkend="__i_o_8h_1a7c30367ec3dc139af2770be26cf31b93">SIZE_TARGET1</link>, <link linkend="__i_o_8h_1ad772d330d64bde872ffb0731ed5ead64">SIZE_TARGET2</link>, <link linkend="__i_o_8h_1aab5d65a0cf85502275b3e5c842ee930c">SIZE_TARGET3</link>, <link linkend="__i_o_8h_1a862c7e6a029a6c63849e0292ad49abbf">SIZE_TARGET4</link>, and <link linkend="__i_o_8h_1a48acc4208931c139a34f10ff7bbba879">SIZE_UART</link>.</para>
<para>
Referenced by <link linkend="_class_so_c_platform_1a22c0796a30b0a77bacd94752fb228e28">SoCPlatform()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72"/><section>
    <title>do_signals_binding()</title>
<indexterm><primary>do_signals_binding</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>do_signals_binding</secondary></indexterm>
<para><computeroutput>void do_signals_binding ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
References <link linkend="_class_so_c_platform_1a859d2b771422c5a164012dafbc8989e1">counter_clear</link>, <link linkend="_class_so_c_platform_1a008c346a0bdd8863ff8ec17814f0bfb5">counter_load</link>, <link linkend="_class_so_c_platform_1a4066df293cfee090b59889e9aaa45fbe">counter_start</link>, <link linkend="_class_so_c_platform_1a19da0392795127799e66fc4816478764">dma_ack</link>, <link linkend="_class_so_c_platform_1a963010b8cb78c33b6b4c229449fa9203">dma_int</link>, <link linkend="_class_so_c_platform_1a432d316da9659b75a9ff2ec2ad44be53">dma_req</link>, <link linkend="_class_so_c_platform_1ad3506003ffe603a616c144d3df83b74e">m_bus</link>, <link linkend="_class_so_c_platform_1a700fb9162aaf7512e9693c41c8b10894">m_dmac</link>, <link linkend="_class_so_c_platform_1a6b64df5fa8eaa82fe31898d6422643eb">m_dummymaster</link>, <link linkend="_class_so_c_platform_1af03ba86ba2da6e4859d047613c552705">m_dummyslave</link>, <link linkend="_class_so_c_platform_1afc086820f6d338c89893794f8a5ed911">m_sysclk</link>, <link linkend="_class_so_c_platform_1aa0dc3580e5ee643bc8352bc3222ae7d2">m_sysrst</link>, <link linkend="_class_so_c_platform_1a03bf7006c051b183160d5ea2ed7f9a6c">m_wrapper_counter</link>, <link linkend="_class_so_c_platform_1ac94e35b0eb83ecdd6a6bafb830ecdda4">m_wrapper_uart</link>, <link linkend="_class_so_c_platform_1ac8f31d7affacf83b982137f58c974746">uart_cs</link>, <link linkend="_class_so_c_platform_1a9f79fbda67fd95709ab3d9d0ff4cfeae">uart_int2</link>, <link linkend="_class_so_c_platform_1a2d7a5026c009275ee78fb487348b230e">uart_nrw</link>, <link linkend="_class_so_c_platform_1a24207039d998bc340ee1c7f2c9ea5650">uart_sin</link>, and <link linkend="_class_so_c_platform_1a4fdc7e80e49d8b06b3df57993f9e190d">uart_sout</link>.</para>
<para>
Referenced by <link linkend="_class_so_c_platform_1a22c0796a30b0a77bacd94752fb228e28">SoCPlatform()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1aa9a73c577c0ff71064d56ef5b4a622fb"/><section>
    <title>dump_memory()</title>
<indexterm><primary>dump_memory</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>dump_memory</secondary></indexterm>
<para><computeroutput>void dump_memory (const std::string &amp; name, sc_dt::uint64 offset, unsigned int len)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>dump_memory </para>
</para>

<para>Show memory regions 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>offset</entry><entry>
<para>The ram offset </para>
</entry>
                            </row>
                            <row>
<entry>len</entry><entry>
<para>The ram size </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
References <link linkend="_class_so_c_platform_1a43553bd73e7406d4255a25dc5ee3045d">m_ram1</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a08a564de97649540c69db5090febf892"/><section>
    <title>get_received_32bit_data()</title>
<indexterm><primary>get_received_32bit_data</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>get_received_32bit_data</secondary></indexterm>
<para><computeroutput>unsigned int get_received_32bit_data ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>get_received_data </para>
</para>

<para>Using to get data from the returned transaction</para>

<para><formalpara><title>Returns</title>

<para>the 32-bit data </para>
</formalpara>
</para>
<para>
References <link linkend="_class_so_c_platform_1a6b64df5fa8eaa82fe31898d6422643eb">m_dummymaster</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1ab48cdf23350697763e6d6e1980c29ed0"/><section>
    <title>get_received_data()</title>
<indexterm><primary>get_received_data</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>get_received_data</secondary></indexterm>
<para><computeroutput>unsigned char * get_received_data ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>get_received_data </para>
</para>

<para>Using to get data from the returned transaction</para>

<para><formalpara><title>Returns</title>

<para>the array of data </para>
</formalpara>
</para>
<para>
References <link linkend="_class_so_c_platform_1a6b64df5fa8eaa82fe31898d6422643eb">m_dummymaster</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a05fd6e372ec6c89b2fcff4deb62dd3ac"/><section>
    <title>monitor_ports()</title>
<indexterm><primary>monitor_ports</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>monitor_ports</secondary></indexterm>
<para><computeroutput>void monitor_ports (bool is_enable)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>monitor_ports </para>
</para>

<para>Using to enable or disable port monitor operation 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>is_enable</entry><entry>
<para>Indicating whether enabling or disabling port monitor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
References <link linkend="_class_so_c_platform_1af03ba86ba2da6e4859d047613c552705">m_dummyslave</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a68420e10135a04360b1af8a70baff6f6"/><section>
    <title>read_input_ports()</title>
<indexterm><primary>read_input_ports</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>read_input_ports</secondary></indexterm>
<para><computeroutput>bool read_input_ports (const std::string &amp; name)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>read_input_ports </para>
</para>

<para>Using to read the value of specific port 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para>Reference to the port name </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
References <link linkend="_class_so_c_platform_1af03ba86ba2da6e4859d047613c552705">m_dummyslave</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1aa5a464ae099c60ba1d6bca9579afa1a7"/><section>
    <title>Sentcustomtransaction()</title>
<indexterm><primary>Sentcustomtransaction</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>Sentcustomtransaction</secondary></indexterm>
<para><computeroutput>void Sentcustomtransaction (unsigned int addr, unsigned char * data, unsigned int data_length, tlm::tlm_command cmd)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Sentcustomtransaction. </para>
</para>

<para>Implements the sent a custom transaction to bus MMIO</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>addr</entry><entry>
<para>Reference to the address of the slave</para>
</entry>
                            </row>
                            <row>
<entry>data</entry><entry>
<para>Reference to the pointer of array data</para>
</entry>
                            </row>
                            <row>
<entry>data_length</entry><entry>
<para>Reference to the length of data</para>
</entry>
                            </row>
                            <row>
<entry>cmd</entry><entry>
<para>Reference to tlm command -TLM_READ_COMMAND : TLM read requset -TLM_WRITE_COMMAND : TLM write requset -TLM_IGNORE_COMMAND: TLM ignore requset </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
References <link linkend="_class_so_c_platform_1a6b64df5fa8eaa82fe31898d6422643eb">m_dummymaster</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a79130bb3520c3a038345f56d2fd6cf25"/><section>
    <title>SentTransaction()</title>
<indexterm><primary>SentTransaction</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>SentTransaction</secondary></indexterm>
<para><computeroutput>void SentTransaction (unsigned int addr, uint32_t data, tlm::tlm_command cmd)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>SentTransaction. </para>
</para>

<para>Implements the sent a transaction with 32 bit data to bus MMIO</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>addr</entry><entry>
<para>Reference to the address of the slave</para>
</entry>
                            </row>
                            <row>
<entry>data</entry><entry>
<para>Reference to 32-bit data</para>
</entry>
                            </row>
                            <row>
<entry>cmd</entry><entry>
<para>Reference to tlm command -TLM_READ_COMMAND : TLM read requset -TLM_WRITE_COMMAND : TLM write requset -TLM_IGNORE_COMMAND: TLM ignore requset </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
References <link linkend="_class_so_c_platform_1a6b64df5fa8eaa82fe31898d6422643eb">m_dummymaster</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a23dd64199f535427de942617399d99dd"/><section>
    <title>set_output_ports()</title>
<indexterm><primary>set_output_ports</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>set_output_ports</secondary></indexterm>
<para><computeroutput>void set_output_ports (const std::string &amp; name, bool value)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>set_output_ports </para>
</para>

<para>Using to set specific output port 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para>Reference to the port name </para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>the value of the output port </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
References <link linkend="_class_so_c_platform_1af03ba86ba2da6e4859d047613c552705">m_dummyslave</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a13bda8683a32fdf40b44b36300f0ba26"/><section>
    <title>trigger_output_ports()</title>
<indexterm><primary>trigger_output_ports</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>trigger_output_ports</secondary></indexterm>
<para><computeroutput>void trigger_output_ports (const std::string &amp; name, bool high_level, bool is_pos)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>set_output_ports </para>
</para>

<para>Using to trigger specific output port 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para>Reference to the port name </para>
</entry>
                            </row>
                            <row>
<entry>high_level</entry><entry>
<para>Indicating the triggered level </para>
</entry>
                            </row>
                            <row>
<entry>is_pos</entry><entry>
<para>Indicating the clock edge synchronization is positive or negative </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
References <link linkend="_class_so_c_platform_1af03ba86ba2da6e4859d047613c552705">m_dummyslave</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_so_c_platform_1a859d2b771422c5a164012dafbc8989e1"/><section>
    <title>counter_clear</title>
<indexterm><primary>counter_clear</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>counter_clear</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; counter_clear<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a008c346a0bdd8863ff8ec17814f0bfb5"/><section>
    <title>counter_load</title>
<indexterm><primary>counter_load</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>counter_load</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; counter_load<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a4066df293cfee090b59889e9aaa45fbe"/><section>
    <title>counter_start</title>
<indexterm><primary>counter_start</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>counter_start</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; counter_start<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a19da0392795127799e66fc4816478764"/><section>
    <title>dma_ack</title>
<indexterm><primary>dma_ack</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>dma_ack</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; dma_ack[256]<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a963010b8cb78c33b6b4c229449fa9203"/><section>
    <title>dma_int</title>
<indexterm><primary>dma_int</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>dma_int</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; dma_int[256]<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a432d316da9659b75a9ff2ec2ad44be53"/><section>
    <title>dma_req</title>
<indexterm><primary>dma_req</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>dma_req</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; dma_req[256]<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1ad3506003ffe603a616c144d3df83b74e"/><section>
    <title>m_bus</title>
<indexterm><primary>m_bus</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_bus</secondary></indexterm>
<para><computeroutput>BUS&lt;APB&gt; m_bus<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>, and <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a700fb9162aaf7512e9693c41c8b10894"/><section>
    <title>m_dmac</title>
<indexterm><primary>m_dmac</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_dmac</secondary></indexterm>
<para><computeroutput>DMAC&lt;32&gt; m_dmac<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>, and <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a6b64df5fa8eaa82fe31898d6422643eb"/><section>
    <title>m_dummymaster</title>
<indexterm><primary>m_dummymaster</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_dummymaster</secondary></indexterm>
<para><computeroutput>DummyMaster&lt;32&gt; m_dummymaster<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>, <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>, <link linkend="_class_so_c_platform_1a08a564de97649540c69db5090febf892">get_received_32bit_data()</link>, <link linkend="_class_so_c_platform_1ab48cdf23350697763e6d6e1980c29ed0">get_received_data()</link>, <link linkend="_class_so_c_platform_1aa5a464ae099c60ba1d6bca9579afa1a7">Sentcustomtransaction()</link>, and <link linkend="_class_so_c_platform_1a79130bb3520c3a038345f56d2fd6cf25">SentTransaction()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1af03ba86ba2da6e4859d047613c552705"/><section>
    <title>m_dummyslave</title>
<indexterm><primary>m_dummyslave</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_dummyslave</secondary></indexterm>
<para><computeroutput>DummySlave&lt;32&gt; m_dummyslave<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>, <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>, <link linkend="_class_so_c_platform_1a05fd6e372ec6c89b2fcff4deb62dd3ac">monitor_ports()</link>, <link linkend="_class_so_c_platform_1a68420e10135a04360b1af8a70baff6f6">read_input_ports()</link>, <link linkend="_class_so_c_platform_1a23dd64199f535427de942617399d99dd">set_output_ports()</link>, and <link linkend="_class_so_c_platform_1a13bda8683a32fdf40b44b36300f0ba26">trigger_output_ports()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a43553bd73e7406d4255a25dc5ee3045d"/><section>
    <title>m_ram1</title>
<indexterm><primary>m_ram1</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_ram1</secondary></indexterm>
<para><computeroutput>RAM&lt;32&gt; m_ram1<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>, and <link linkend="_class_so_c_platform_1aa9a73c577c0ff71064d56ef5b4a622fb">dump_memory()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1afc086820f6d338c89893794f8a5ed911"/><section>
    <title>m_sysclk</title>
<indexterm><primary>m_sysclk</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_sysclk</secondary></indexterm>
<para><computeroutput>sc_core::sc_clock m_sysclk<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1aa0dc3580e5ee643bc8352bc3222ae7d2"/><section>
    <title>m_sysrst</title>
<indexterm><primary>m_sysrst</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_sysrst</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; m_sysrst<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1af83e96c6763b5b0c39baa0ac328f5418"/><section>
    <title>m_target1</title>
<indexterm><primary>m_target1</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_target1</secondary></indexterm>
<para><computeroutput>Target&lt;32&gt; m_target1<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1aa4121bd495177a6f661dbc5cd06b1786"/><section>
    <title>m_target2</title>
<indexterm><primary>m_target2</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_target2</secondary></indexterm>
<para><computeroutput>Target&lt;32&gt; m_target2<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a189c54ea99df289ef25b4dab4883736f"/><section>
    <title>m_target3</title>
<indexterm><primary>m_target3</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_target3</secondary></indexterm>
<para><computeroutput>Target&lt;32&gt; m_target3<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1afa4db5b546c437b7f6306c0fd4c86aef"/><section>
    <title>m_target4</title>
<indexterm><primary>m_target4</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_target4</secondary></indexterm>
<para><computeroutput>Target&lt;32&gt; m_target4<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a03bf7006c051b183160d5ea2ed7f9a6c"/><section>
    <title>m_wrapper_counter</title>
<indexterm><primary>m_wrapper_counter</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_wrapper_counter</secondary></indexterm>
<para><computeroutput>wrapper_counter&lt;32&gt; m_wrapper_counter<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>, and <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1ad331a9e716b36bd57a50b7a919e8276a"/><section>
    <title>m_wrapper_four_bit_adder</title>
<indexterm><primary>m_wrapper_four_bit_adder</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_wrapper_four_bit_adder</secondary></indexterm>
<para><computeroutput>wrapper_four_bit_adder&lt;32&gt; m_wrapper_four_bit_adder<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1ac94e35b0eb83ecdd6a6bafb830ecdda4"/><section>
    <title>m_wrapper_uart</title>
<indexterm><primary>m_wrapper_uart</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>m_wrapper_uart</secondary></indexterm>
<para><computeroutput>wrapper_uart&lt;32&gt; m_wrapper_uart<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ab79739920ef226160974aaaf9856d663">do_bus_binding()</link>, and <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1ac8f31d7affacf83b982137f58c974746"/><section>
    <title>uart_cs</title>
<indexterm><primary>uart_cs</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>uart_cs</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; uart_cs<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a9f79fbda67fd95709ab3d9d0ff4cfeae"/><section>
    <title>uart_int2</title>
<indexterm><primary>uart_int2</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>uart_int2</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; uart_int2<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a2d7a5026c009275ee78fb487348b230e"/><section>
    <title>uart_nrw</title>
<indexterm><primary>uart_nrw</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>uart_nrw</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; uart_nrw<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a24207039d998bc340ee1c7f2c9ea5650"/><section>
    <title>uart_sin</title>
<indexterm><primary>uart_sin</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>uart_sin</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; uart_sin<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<anchor xml:id="_class_so_c_platform_1a4fdc7e80e49d8b06b3df57993f9e190d"/><section>
    <title>uart_sout</title>
<indexterm><primary>uart_sout</primary><secondary>SoCPlatform</secondary></indexterm>
<indexterm><primary>SoCPlatform</primary><secondary>uart_sout</secondary></indexterm>
<para><computeroutput>sc_core::sc_signal&lt;bool&gt; uart_sout<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_so_c_platform_1ae7219aa80b0f1313e6d9c62554722b72">do_signals_binding()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
SocPlatform/<link linkend="_top_8h">top.h</link></section>
</section>
